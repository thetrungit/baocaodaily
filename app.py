import json, os
creds_dict = json.loads(os.environ["GOOGLE_CREDS"])
creds = ServiceAccountCredentials.from_json_keyfile_dict(creds_dict, scope)
import streamlit as st
import gspread
import pandas as pd
from oauth2client.service_account import ServiceAccountCredentials
from datetime import datetime

# K·∫øt n·ªëi Google Sheets
@st.cache_resource
def get_gspread_client():
    scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
    creds = ServiceAccountCredentials.from_json_keyfile_name("credentials.json", scope)
    return gspread.authorize(creds)

gc = get_gspread_client()
sheet_id = "1kJc1rpJ0xdVBEdAQBzYOJYb5Gi9B2fyy"
spreadsheet = gc.open_by_key(sheet_id)

# Trang ch√≠nh
st.title("üìã H·ªá th·ªëng Qu·∫£n l√Ω B√°o c√°o Y t·∫ø")

menu = st.sidebar.radio("Ch·ª©c nƒÉng", ["Nh·∫≠p li·ªáu", "Xem b√°o c√°o"])

sheet_names = [ws.title for ws in spreadsheet.worksheets()]

if menu == "Nh·∫≠p li·ªáu":
    st.header("‚ûï Nh·∫≠p d·ªØ li·ªáu")

    selected_sheet = st.selectbox("Ch·ªçn Khoa (sheet)", sheet_names)
    ws = spreadsheet.worksheet(selected_sheet)

    # Nh·∫≠p li·ªáu
    hoten = st.text_input("H·ªç v√† t√™n")
    ngay = st.date_input("Ng√†y")
    ghichu = st.text_input("Ghi ch√∫")

    # X·ª≠ l√Ω n√∫t
    if st.button("‚ûï Th√™m"):
        ws.append_row([hoten, ngay.strftime("%Y-%m-%d"), ghichu])
        st.success("ƒê√£ th√™m d√≤ng m·ªõi!")

    # Xem b·∫£ng hi·ªán t·∫°i ƒë·ªÉ s·ª≠a/xo√°
    df = pd.DataFrame(ws.get_all_records())
    st.write("üìÑ D·ªØ li·ªáu hi·ªán c√≥", df)

    selected_index = st.number_input("Ch·ªçn d√≤ng ƒë·ªÉ s·ª≠a/xo√° (b·∫Øt ƒë·∫ßu t·ª´ 1)", min_value=1, max_value=len(df), step=1)

    if st.button("‚úèÔ∏è S·ª≠a"):
        ws.update(f"A{selected_index+1}", [[hoten, ngay.strftime("%Y-%m-%d"), ghichu]])
        st.success("ƒê√£ s·ª≠a!")

    if st.button("‚ùå Xo√°"):
        ws.delete_rows(selected_index + 1)
        st.success("ƒê√£ xo√°!")

elif menu == "Xem b√°o c√°o":
    st.header("üìä B√°o c√°o theo th·ªùi gian")

    selected_sheet = st.selectbox("Ch·ªçn Khoa (sheet)", sheet_names)
    ws = spreadsheet.worksheet(selected_sheet)
    df = pd.DataFrame(ws.get_all_records())

    if "Ng√†y" not in df.columns:
        st.warning("Kh√¥ng c√≥ c·ªôt 'Ng√†y' trong sheet.")
    else:
        df["Ng√†y"] = pd.to_datetime(df["Ng√†y"], errors='coerce')

        from_date = st.date_input("T·ª´ ng√†y", value=datetime(2024, 1, 1))
        to_date = st.date_input("ƒê·∫øn ng√†y", value=datetime.today())

        mask = (df["Ng√†y"] >= pd.to_datetime(from_date)) & (df["Ng√†y"] <= pd.to_datetime(to_date))
        filtered_df = df.loc[mask]

        st.success(f"üìÜ T·ªïng s·ªë d√≤ng: {len(filtered_df)}")
        st.dataframe(filtered_df)

